# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests'
            - '../src/Migrations'

    Redis:
        class: Redis
        factory: [ Symfony\Component\Cache\Adapter\RedisAdapter, 'createConnection' ]
        arguments:
            - '%env(resolve:REDIS_DSN)%'

    App\Infrastructure\Adapter\RedisClient:
        arguments:
            $redis: '@Redis'

    App\Domain\Service\RedisClientInterface: '@App\Infrastructure\Adapter\RedisClient'

    App\Infrastructure\Service\NameCacheService:
        arguments:
            $redis: '@App\Domain\Service\RedisClientInterface'

    App\Application\Service\GeneratePlayersService:
        arguments:
            $nameGenerator: '@App\Infrastructure\Cache\NameCacheGeneratorService'

    App\Infrastructure\Http\RandomUserApiService:
        arguments:
            $httpClient: '@http_client'

    App\Domain\Service\NameGeneratorServiceInterface: '@App\Infrastructure\Cache\NameCacheGeneratorService'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
